<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4accb01a-42cf-4625-af02-5b5243d6e3d4" name="Changes" comment="feat: add files and folders" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2VlSSjs3kLeycCDNQzY4CsChTGa" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/thaisminas/Documents/4foryousee/fullstack-challenge-20230720&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;/Users/thaisminas/Documents/4foryousee/fullstack-challenge-20230720/node_modules/jest&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/thaisminas/Documents/4foryousee/fullstack-challenge-20230720/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/types" />
      <recent name="$PROJECT_DIR$/src/utils" />
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/src/validations" />
      <recent name="$PROJECT_DIR$/files" />
    </key>
  </component>
  <component name="RunManager" selected="npm.start">
    <configuration name="Deve retornar o plano mais recente quando a prioridade é igual" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/utils/plansValidation.spec.ts" />
      <test-names>
        <test-name value="Deve retornar o plano mais recente quando a prioridade é igual" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="PlansValidation.Should validate and return a list of plans" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/utils/plansValidation.spec.ts" />
      <test-names>
        <test-name value="PlansValidation" />
        <test-name value="Should validate and return a list of plans" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="PlansValidation.deve retornar uma lista de planos corretamente" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/script.test.ts" />
      <test-names>
        <test-name value="PlansValidation" />
        <test-name value="deve retornar uma lista de planos corretamente" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="script.deve retornar uma lista de planos corretamente" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/script.test.ts" />
      <test-names>
        <test-name value="script" />
        <test-name value="deve retornar uma lista de planos corretamente" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="start" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.start" />
        <item itemvalue="Jest.PlansValidation.Should validate and return a list of plans" />
        <item itemvalue="Jest.script.deve retornar uma lista de planos corretamente" />
        <item itemvalue="Jest.PlansValidation.deve retornar uma lista de planos corretamente" />
        <item itemvalue="Jest.Deve retornar o plano mais recente quando a prioridade é igual" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4accb01a-42cf-4625-af02-5b5243d6e3d4" name="Changes" comment="" />
      <created>1695409175795</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1695409175795</updated>
      <workItem from="1695409177067" duration="6815000" />
      <workItem from="1695598954958" duration="7759000" />
      <workItem from="1695678190443" duration="4439000" />
      <workItem from="1695684467926" duration="9357000" />
      <workItem from="1695722246873" duration="6461000" />
      <workItem from="1695742625562" duration="2577000" />
    </task>
    <task id="LOCAL-00001" summary="feat: add files and folders">
      <created>1695420801294</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1695420801294</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: add files and folders" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: add files and folders" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/script.ts</url>
          <line>8</line>
          <option name="timeStamp" value="25" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/utils/plans-validation.ts</url>
          <line>6</line>
          <option name="timeStamp" value="28" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/utils/plans-validation.ts</url>
          <line>11</line>
          <option name="timeStamp" value="29" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/utils/plans-validation.ts</url>
          <line>22</line>
          <option name="timeStamp" value="30" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/utils/validation-date.ts</url>
          <line>4</line>
          <option name="timeStamp" value="31" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/utils/plans-validation.ts</url>
          <line>26</line>
          <option name="timeStamp" value="33" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/test/script.test.ts</url>
          <line>49</line>
          <option name="timeStamp" value="34" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/src/script.ts</url>
          <line>28</line>
          <option name="timeStamp" value="35" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/test/utils/plans-validation.spec.ts</url>
          <line>246</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="36" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>